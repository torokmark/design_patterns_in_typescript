{
    "compilerOptions": {
        "module": "system",
        "target": "ES5",
        "noImplicitAny": false,
        "sourceMap": false,
		"outFile": "patterns.js"
    },
	"files": [
		"main.ts",
		"creational/abstract_factory/abstractFactory.ts",
		"creational/abstract_factory/demo.ts",
		"structural/adapter/adapter.ts",
		"structural/adapter/demo.ts",
		"structural/bridge/bridge.ts",
		"structural/bridge/demo.ts",
		"creational/builder/builder.ts",
		"creational/builder/demo.ts",
		"behavioral/chain_of_responsibility/chainOfResponsibility.ts",
		"behavioral/chain_of_responsibility/demo.ts",
		"behavioral/command/command.ts",
		"behavioral/command/demo.ts",
		"structural/composite/composite.ts",
		"structural/composite/demo.ts",
		"structural/decorator/decorator.ts",
		"structural/decorator/demo.ts",
		"structural/facade/facade.ts",
		"structural/facade/demo.ts",
		"creational/factory_method/factoryMethod.ts",
		"creational/factory_method/demo.ts",
		"structural/flyweight/flyweight.ts",
		"structural/flyweight/demo.ts",
		"behavioral/interpreter/interpreter.ts",
		"behavioral/interpreter/demo.ts",
		"behavioral/mediator/mediator.ts",
		"behavioral/mediator/demo.ts",
		"behavioral/iterator/iterator.ts",
		"behavioral/iterator/demo.ts",
		"behavioral/memento/memento.ts",
		"behavioral/memento/demo.ts",
		"behavioral/observer/observer.ts",
		"behavioral/observer/demo.ts",
		"creational/prototype/prototype.ts",
		"creational/prototype/demo.ts",
		"structural/proxy/proxy.ts",
		"structural/proxy/demo.ts",
		"creational/singleton/singleton.ts",
		"creational/singleton/demo.ts",
		"behavioral/state/state.ts",
		"behavioral/state/demo.ts",
		"behavioral/strategy/strategy.ts",
		"behavioral/strategy/demo.ts",
		"behavioral/template_method/templateMethod.ts",
		"behavioral/template_method/demo.ts",
		"behavioral/visitor/visitor.ts",
		"behavioral/visitor/demo.ts"
	]
}
